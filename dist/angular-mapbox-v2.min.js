!function(){"use strict";angular.module("angular-mapbox-v2",[])}(),function(){"use strict";angular.module("angular-mapbox-v2").service("mapboxService",["utils",function(utils){function init(opts){opts=opts||{},L.mapbox.accessToken=opts.accessToken}function addMapInstance(map,mapOptions,mapMarkers){mapOptions=mapOptions||{},_mapInstances.push(map),_mapOptions.push(mapOptions),_markers.push(mapMarkers||[])}function removeMapInstance(map){var mapIndex=_mapInstances.indexOf(map);mapIndex>=0&&(_mapInstances.splice(mapIndex,1),_mapOptions.splice(mapIndex,1),_markers.splice(mapIndex,1))}function getMapInstances(){return _mapInstances}function getMarkersForMap(map){var mapIndex=_mapInstances.indexOf(map);return _markers[mapIndex]}function getOptionsForMap(map){var mapIndex=_mapInstances.indexOf(map);return _mapOptions[mapIndex]}function addMarker(map,marker){var mapIndex=_mapInstances.indexOf(map),mapMarkers=_markers[mapIndex],mapOptions=_mapOptions[mapIndex];mapMarkers.push(marker),mapOptions.scaleToFit&&fitMapToMarkers(map)}function removeMarker(map,marker){map.removeLayer(marker);for(var markerIndexToRemove,i=0,markers=getMarkersForMap(map);markers[i];i++)markers[i]._leaflet_id===marker._leaflet_id&&(markerIndexToRemove=i);markers.splice(markerIndexToRemove,1);var opts=getOptionsForMap(map);opts.scaleToFit&&opts.scaleToFitAll&&fitMapToMarkers(map)}var _mapInstances=[],_markers=[],_mapOptions=[],fitMapToMarkers=utils.debounce(function(map){var group=new L.featureGroup(getMarkersForMap(map));map.fitBounds(group.getBounds())},0);return{init:init,getMapInstances:getMapInstances,addMapInstance:addMapInstance,removeMapInstance:removeMapInstance,getMarkersForMap:getMarkersForMap,addMarker:addMarker,removeMarker:removeMarker,fitMapToMarkers:fitMapToMarkers,getOptionsForMap:getOptionsForMap}}])}(),function(){"use strict";angular.module("angular-mapbox-v2").constant("utils",{debounce:function(func,wait,immediate){var timeout;return function(){var context=this,args=arguments,later=function(){timeout=null,immediate||func.apply(context,args)},callNow=immediate&&!timeout;clearTimeout(timeout),timeout=setTimeout(later,wait),callNow&&func.apply(context,args)}}})}(),function(){"use strict";angular.module("angular-mapbox-v2").directive("featureLayer",function(){return{restrict:"E",require:"^mapbox",link:function(scope,element,attrs,controller){var featureLayer;controller.getMap().then(function(map){if(attrs.data){var geojsonObject=scope.$eval(attrs.data);featureLayer=L.mapbox.featureLayer(geojsonObject)}else attrs.url&&(featureLayer=L.mapbox.featureLayer(attrs.url));featureLayer&&(featureLayer.addTo(map),controller.addFeatureLayer(featureLayer),element.bind("$destroy",function(){map.removeLayer(featureLayer),controller.removeFeatureLayer(featureLayer)}))})}}})}(),function(){"use strict";angular.module("angular-mapbox-v2").directive("htmlMarker",["$compile","$timeout","mapboxService",function($compile,$timeout,mapboxService){function link(scope,element,attrs,controller,transclude){var _marker,_opts,_style;_opts={draggable:void 0!==attrs.draggable,className:attrs.className,html:attrs.html,width:attrs.width,height:attrs.height},_style=setStyleOptions(attrs),controller.getMap().then(function(map){transclude(scope,function(transcludedContent){var popupContentElement;if(null!==transcludedContent&&transcludedContent.length>0){popupContentElement=document.createElement("span");for(var i=0;i<transcludedContent.length;i++)popupContentElement.appendChild(transcludedContent[i])}void 0!==attrs.currentLocation?(_style=setStyleOptions(_style,{"marker-color":"#000","marker-symbol":"star"}),_opts.excludeFromClustering=!0,map.on("locationfound",function(e){_marker=addMarker(scope,map,[e.latlng.lat,e.latlng.lng],popupContentElement,_opts,_style)}),map.locate()):_marker=addMarker(scope,map,[attrs.lat,attrs.lng],popupContentElement,_opts,_style)}),element.bind("$destroy",function(){mapboxService.getOptionsForMap(map).clusterMarkers?scope.clusterGroup.removeLayer(_marker):mapboxService.removeMarker(map,_marker)})})}function setStyleOptions(attrs,defaultOpts){var opts=defaultOpts||{};return attrs.size&&(opts["marker-size"]=attrs.size),attrs.color&&("#"===attrs.color[0]?opts["marker-color"]=attrs.color:opts["marker-color"]=_colors[attrs.color]||attrs.color),attrs.icon&&(opts["marker-symbol"]=attrs.icon),opts}function addMarker(scope,map,latlng,popupContent,opts){opts=opts||{};var marker=L.marker(latlng,{icon:L.divIcon({className:opts.className,html:opts.html,iconSize:opts.width&&opts.height?[opts.width,opts.height]:null})});return popupContent&&marker.bindPopup(popupContent),mapboxService.getOptionsForMap(map).clusterMarkers&&opts.excludeFromClustering!==!0?scope.clusterGroup.addLayer(marker):marker.addTo(map),opts.draggable&&marker.dragging.enable(),mapboxService.addMarker(map,marker),marker}var _colors={navy:"#001f3f",blue:"#0074d9",aqua:"#7fdbff",teal:"#39cccc",olive:"#3d9970",green:"#2ecc40",lime:"#01ff70",yellow:"#ffdc00",orange:"#ff851b",red:"#ff4136",fuchsia:"#f012be",purple:"#b10dc9",maroon:"#85144b",white:"white",silver:"#dddddd",gray:"#aaaaaa",black:"#111111"};return{restrict:"E",require:"^mapbox",transclude:!0,scope:!0,link:link}}])}(),function(){"use strict";angular.module("angular-mapbox-v2").directive("mapbox",["$q","$parse","$timeout","mapboxService",function($q,$parse,$timeout,mapboxService){var _mapboxMap;return{restrict:"E",transclude:!0,scope:{onReposition:"&?",onZoom:"&?",onClick:"&?"},replace:!0,template:'<div class="angular-mapbox-map" ng-transclude></div>',controller:["$scope",function($scope){_mapboxMap=$q.defer(),this.getMap=function(){return _mapboxMap.promise},this.addFeatureLayer=function(featureLayer){$scope.featureLayers.push(featureLayer)},this.removeFeatureLayer=function(featureLayer){$scope.featureLayers.slice($scope.featureLayers.indexOf(featureLayer),1)},L.MarkerClusterGroup&&($scope.clusterGroup=new L.MarkerClusterGroup,this.getMap().then(function(map){map.addLayer($scope.clusterGroup)})),this.$scope=$scope}],link:function($scope,element,attrs){$scope.map=L.mapbox.map(element[0],attrs.mapId),$scope.markers=[],$scope.featureLayers=[];var mapOptions={clusterMarkers:void 0!==attrs.clusterMarkers,scaleToFit:void 0!==attrs.scaleToFit,scaleToFitAll:"all"===attrs.scaleToFit};if(mapboxService.addMapInstance($scope.map,mapOptions,$scope.markers),_mapboxMap.resolve($scope.map),"false"===attrs.dragging&&$scope.map.dragging.disable(),"false"===attrs.touchZoom&&$scope.map.touchZoom.disable(),"false"===attrs.doubleClickZoom&&$scope.map.doubleClickZoom.disable(),"false"===attrs.scrollWheelZoom&&$scope.map.scrollWheelZoom.disable(),void 0===attrs.autoSize){var mapWidth=attrs.width||500,mapHeight=attrs.height||500;isNaN(mapWidth)?element.css("width",mapWidth):element.css("width",mapWidth+"px"),isNaN(mapHeight)?element.css("height",mapHeight):element.css("height",mapHeight+"px")}$scope.onReposition&&$scope.map.on("dragend",function(event){$timeout(function(){$scope.onReposition({event:event,map:$scope.map})})}),$scope.onZoom&&$scope.map.on("zoomend",function(event){$timeout(function(){$scope.onZoom({event:event,map:$scope.map})})}),$scope.onClick&&$scope.map.on("click",function(event){$timeout(function(){$scope.onClick({event:event,map:$scope.map})})});var refreshMap=function(){var zoom=attrs.zoom||12;attrs.lat&&attrs.lng&&$scope.map.setView([attrs.lat,attrs.lng],zoom)};attrs.$observe("lat",refreshMap),attrs.$observe("lng",refreshMap),attrs.$observe("zoom",refreshMap),element.bind("$destroy",function(){mapboxService.removeMapInstance($scope.map)}),refreshMap()}}}])}(),function(){"use strict";angular.module("angular-mapbox-v2").directive("marker",["$compile","$timeout","$parse","mapboxService",function($compile,$timeout,$parse,mapboxService){function link(scope,element,attrs,controller,transclude){var _marker,_opts,_style;_opts={draggable:void 0!==attrs.draggable},_style=setStyleOptions(attrs),controller.getMap().then(function(map){transclude(scope,function(transcludedContent){var popupContentElement;if(null!==transcludedContent&&transcludedContent.length>0){popupContentElement=document.createElement("span");for(var i=0;i<transcludedContent.length;i++)popupContentElement.appendChild(transcludedContent[i])}if(void 0!==attrs.currentLocation)_style=setStyleOptions(_style,{"marker-color":"#000","marker-symbol":"star"}),_opts.excludeFromClustering=!0,map.on("locationfound",function(e){_marker=addMarker(scope,map,[e.latlng.lat,e.latlng.lng],popupContentElement,_opts,_style)}),map.locate();else if(_marker=addMarker(scope,map,[attrs.lat,attrs.lng],popupContentElement,_opts,_style),attrs.onClick){var clickFn=$parse(attrs.onClick,null,!0);_marker.on("click",function(){scope.$apply(function(){clickFn(scope,{$event:event})})})}}),element.bind("$destroy",function(){mapboxService.getOptionsForMap(map).clusterMarkers?scope.clusterGroup.removeLayer(_marker):mapboxService.removeMarker(map,_marker)})})}function setStyleOptions(attrs,defaultOpts){var opts=defaultOpts||{};return attrs.size&&(opts["marker-size"]=attrs.size),attrs.color&&("#"===attrs.color[0]?opts["marker-color"]=attrs.color:opts["marker-color"]=_colors[attrs.color]||attrs.color),attrs.icon&&(opts["marker-symbol"]=attrs.icon),opts}function addMarker(scope,map,latlng,popupContent,opts,style){opts=opts||{};var marker=L.mapbox.marker.style({properties:style},latlng);return popupContent&&marker.bindPopup(popupContent),mapboxService.getOptionsForMap(map).clusterMarkers&&opts.excludeFromClustering!==!0?scope.clusterGroup.addLayer(marker):marker.addTo(map),opts.draggable&&marker.dragging.enable(),mapboxService.addMarker(marker),marker}var _colors={navy:"#001f3f",blue:"#0074d9",aqua:"#7fdbff",teal:"#39cccc",olive:"#3d9970",green:"#2ecc40",lime:"#01ff70",yellow:"#ffdc00",orange:"#ff851b",red:"#ff4136",fuchsia:"#f012be",purple:"#b10dc9",maroon:"#85144b",white:"white",silver:"#dddddd",gray:"#aaaaaa",black:"#111111"};return{restrict:"E",require:"^mapbox",transclude:!0,scope:!0,link:link}}])}();