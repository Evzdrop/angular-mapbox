angular.module("angular-mapbox",[]).service("mapboxService",["$timeout",function(a){function f(a){a=a||{},L.mapbox.accessToken=a.accessToken}function g(a,b,c){b=b||{},this.mapInstances.push(a),this.mapOptions.push(b),this.markers.push(c||[]),this.mapInstanceMapped[h(a)]=a}function h(a){return a._container.id}function i(a){var b=this.mapInstances.indexOf(a);delete this.mapInstanceMapped[h(a)],b>=0&&(this.mapInstances.splice(b,1),this.mapOptions.splice(b,1),this.markers.splice(b,1))}function j(){return this.mapInstances}function k(a){return this.mapInstanceMapped[a]}function l(a){var b=this.mapInstances.indexOf(a);return this.markers[b]}function m(a){var b=this.mapInstances.indexOf(a);return this.mapOptions[b]}function n(b,c){a(function(){var a=new L.featureGroup(c);b.fitBounds(a.getBounds()),b.getZoom()>15&&b.setZoom(15)}.bind(this),100)}function o(a,b){var c=this.mapInstances.indexOf(a),d=this.markers[c],e=this.mapOptions[c];d.push(b),e.scaleToFit&&n(a,d)}function p(a,b){a.removeLayer(b);var c,d=this.getMarkersForMap(a);if(d){for(var e=0;d[e];e++)d[e]._leaflet_id===b._leaflet_id&&(c=e);d.splice(c,1);var f=m(a);f.scaleToFit&&f.scaleToFitAll&&n(a,d)}}var b=[],c=[],d=[],e={};return{init:f,getMapInstances:j,addMapInstance:g,removeMapInstance:i,getMarkersForMap:l,addMarker:o,removeMarker:p,fitMapToMarkers:n,getOptionsForMap:m,getMapInstance:k,mapInstances:b,markers:d,mapOptions:c,mapInstanceMapped:e}}]).directive("mapbox",["$q","$parse","$timeout","mapboxService",function(a,b,c,d){return{restrict:"E",transclude:!0,scope:{onReposition:"&?",onZoom:"&?",onClick:"&?"},replace:!0,template:'<div class="angular-mapbox-map" ng-transclude></div>',link:function(a,b,e){var f=b[0];f.id=e.id,a.map=L.mapbox.map(f,e.mapId),a.markers=[],a.featureLayers=[];var g={clusterMarkers:void 0!==e.clusterMarkers,scaleToFit:void 0!==e.scaleToFit,scaleToFitAll:"all"===e.scaleToFit};if(void 0!==g.clusterMarkers&&(g.clusterGroup=new L.MarkerClusterGroup,a.map.addLayer(g.clusterGroup)),d.addMapInstance(a.map,g,a.markers),"false"===e.dragging&&a.map.dragging.disable(),"false"===e.touchZoom&&a.map.touchZoom.disable(),"false"===e.doubleClickZoom&&a.map.doubleClickZoom.disable(),"false"===e.scrollWheelZoom&&a.map.scrollWheelZoom.disable(),void 0===e.autoSize){var h=e.width||"100",i=e.height||500;isNaN(h)?b.css("width",h):b.css("width",h+"%"),isNaN(i)?b.css("height",i):b.css("height",i+"px")}a.onReposition&&a.map.on("dragend",function(b){c(function(){a.onReposition({event:b,map:a.map})})}),a.onZoom&&a.map.on("zoomend",function(b){c(function(){a.onZoom({event:b,map:a.map})})}),a.onClick&&a.map.on("click",function(b){c(function(){a.onClick({event:b,map:a.map})})});var j=function(){var b=e.zoom||12;e.lat&&e.lng?a.map.setView([e.lat,e.lng],b):a.map.setZoom(b)};e.$observe("lat",j),e.$observe("lng",j),e.$observe("zoom",j),b.bind("$destroy",function(){d.removeMapInstance(a.map)}),j()}}}]).directive("marker",["$compile","$timeout","mapboxService",function(a,b,c){return{restrict:"E",scope:{onClick:"&",marker:"="},link:function(a,b,d){function h(a){return a.iconUrl?L.icon({iconUrl:a.iconUrl,iconSize:a.iconSize.split(","),iconAnchor:[20,30]}):void 0}function j(a,b){var c=b||{};return a.size&&(c["marker-size"]=a.size||[25,35]),a.icon&&(c["marker-symbol"]=a.icon,delete c.icon),a.color&&(c["marker-color"]=a.color),c}function k(a,b,d,e,f){e=e||{};var g=L.marker(d,e);return c.getOptionsForMap(b).clusterMarkers&&e.excludeFromClustering!==!0?c.getOptionsForMap(b).clusterGroup.addLayer(g):g.addTo(b),e.draggable&&g.dragging.enable(),e.clickable&&(g.options.clickable=!1),c.addMarker(b,g),g}var e,f,g;f={draggable:void 0!==d.draggable,clickable:void 0!==d.clickable,icon:h(d)},g=j(d,f);var i=c.getMapInstance(d.id);e=k(a,i,[d.lat,d.lng],f,g),a.onClick&&e.on("click",function(){a.onClick({marker:a.marker})}),b.bind("$destroy",function(){c.getOptionsForMap(i)&&c.getOptionsForMap(i).clusterMarkers?c.getOptionsForMap(i).clusterGroup.removeLayer(e):c.removeMarker(i,e)})}}}]);
