!function(){"use strict";angular.module("angular-mapbox",[])}(),function(){"use strict";angular.module("angular-mapbox").service("mapboxService",["utils",function(e){function a(e){e=e||{},L.mapbox.accessToken=e.accessToken}function r(e,a,r){a=a||{},p.push(e),f.push(a),d.push(r||[]),m[o(e)]=e}function o(e){return e._container.id}function n(e){var a=p.indexOf(e);delete m[o(e)],a>=0&&(p.splice(a,1),f.splice(a,1),d.splice(a,1))}function t(){return p}function i(e){return m[e]}function c(e){var a=p.indexOf(e);return d[a]}function u(e){var a=p.indexOf(e);return f[a]}function s(e,a){var r=p.indexOf(e),o=d[r],n=f[r];o.push(a),n.scaleToFit&&v(e)}function l(e,a){e.removeLayer(a);var r,o=c(e);if(o){for(var n=0;o[n];n++)o[n]._leaflet_id===a._leaflet_id&&(r=n);o.splice(r,1);var t=u(e);t.scaleToFit&&t.scaleToFitAll&&v(e)}}var p=[],d=[],m={},f=[],v=e.debounce(function(e){var a=new L.featureGroup(c(e));e.fitBounds(a.getBounds()),e.getZoom()>15&&e.setZoom(15)},0);return{init:a,getMapInstances:t,addMapInstance:r,removeMapInstance:n,getMarkersForMap:c,addMarker:s,removeMarker:l,fitMapToMarkers:v,getOptionsForMap:u,getMapInstance:i}}])}(),function(){"use strict";angular.module("angular-mapbox").constant("utils",{debounce:function(e,a,r){var o;return function(){var n=this,t=arguments,i=function(){o=null,r||e.apply(n,t)},c=r&&!o;clearTimeout(o),o=setTimeout(i,a),c&&e.apply(n,t)}}})}(),function(){"use strict";angular.module("angular-mapbox").directive("featureLayer",function(){return{restrict:"E",require:"^mapbox",link:function(e,a,r,o){var n;o.getMap().then(function(t){if(r.data){var i=e.$eval(r.data);n=L.mapbox.featureLayer(i)}else r.url&&(n=L.mapbox.featureLayer(r.url));n&&(n.addTo(t),o.addFeatureLayer(n),a.bind("$destroy",function(){t.removeLayer(n),o.removeFeatureLayer(n)}))})}}})}(),function(){"use strict";angular.module("angular-mapbox").directive("mapbox",["$q","$parse","$timeout","mapboxService",function(e,a,r,o){var n;return{restrict:"E",transclude:!0,scope:{onReposition:"&?",onZoom:"&?",onClick:"&?"},replace:!0,template:'<div class="angular-mapbox-map" ng-transclude></div>',controller:function(a){n=e.defer(),this.getMap=function(){return n.promise},this.addFeatureLayer=function(e){a.featureLayers.push(e)},this.removeFeatureLayer=function(e){a.featureLayers.slice(a.featureLayers.indexOf(e),1)},this.$scope=a},link:function(e,a,t){var i=a[0];i.id=t.id,e.map=L.mapbox.map(i,t.mapId),e.markers=[],e.featureLayers=[];var c={clusterMarkers:void 0!==t.clusterMarkers,scaleToFit:void 0!==t.scaleToFit,scaleToFitAll:"all"===t.scaleToFit};if(void 0!==c.clusterMarkers&&(c.clusterGroup=new L.MarkerClusterGroup,e.map.addLayer(c.clusterGroup)),o.addMapInstance(e.map,c,e.markers),n.resolve(e.map),"false"===t.dragging&&e.map.dragging.disable(),"false"===t.touchZoom&&e.map.touchZoom.disable(),"false"===t.doubleClickZoom&&e.map.doubleClickZoom.disable(),"false"===t.scrollWheelZoom&&e.map.scrollWheelZoom.disable(),void 0===t.autoSize){var u=t.width||"100",s=t.height||500;isNaN(u)?a.css("width",u):a.css("width",u+"%"),isNaN(s)?a.css("height",s):a.css("height",s+"px")}e.onReposition&&e.map.on("dragend",function(a){r(function(){e.onReposition({event:a,map:e.map})})}),e.onZoom&&e.map.on("zoomend",function(a){r(function(){e.onZoom({event:a,map:e.map})})}),e.onClick&&e.map.on("click",function(a){r(function(){e.onClick({event:a,map:e.map})})});var l=function(){var a=t.zoom||12;t.lat&&t.lng?e.map.setView([t.lat,t.lng],a):e.map.setZoom(a)};t.$observe("lat",l),t.$observe("lng",l),t.$observe("zoom",l),a.bind("$destroy",function(){o.removeMapInstance(e.map)}),l()}}}])}(),function(){"use strict";angular.module("angular-mapbox").directive("marker",function(e,a,r){function o(e,a,o,i,c){function u(e){return e.iconUrl?L.icon({iconUrl:e.iconUrl,iconSize:e.iconSize,iconAnchor:[25,35]}):void 0}var s,l,p;l={draggable:void 0!==o.draggable,clickable:void 0!==o.clickable,icon:u(o)},p=n(o,l);var d=r.getMapInstance(o.id);c(e,function(a){s=t(e,d,[o.lat,o.lng],l,p),e.onClick&&s.on("click",function(){e.onClick({marker:e.marker})})}),a.bind("$destroy",function(){r.getOptionsForMap(d)&&r.getOptionsForMap(d).clusterMarkers?r.getOptionsForMap(d).clusterGroup.removeLayer(s):r.removeMarker(d,s)})}function n(e,a){var r=a||{};return e.size&&(r["marker-size"]=e.size||[25,35]),e.icon&&(r["marker-symbol"]=e.icon,delete r.icon),e.color&&(r["marker-color"]=e.color),r}function t(e,a,o,n,t){n=n||{};var i=L.marker(o,n);return r.getOptionsForMap(a).clusterMarkers&&n.excludeFromClustering!==!0?r.getOptionsForMap(a).clusterGroup.addLayer(i):i.addTo(a),n.draggable&&i.dragging.enable(),n.clickable&&(i.options.clickable=!1),r.addMarker(a,i),i}return{restrict:"E",require:"^mapbox",transclude:!0,scope:{onClick:"&",marker:"="},link:o}})}();